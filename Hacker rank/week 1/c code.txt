WEEK 1 : HACKER RANK
1]  #include <stdio.h>
void plusMinus(int arr[], int n) {
    int pos = 0, neg = 0, zero = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] > 0) pos++;
        else if (arr[i] < 0) neg++;
        else zero++;
    }
    printf("%.6f\n%.6f\n%.6f\n", (float)pos/n, (float)neg/n, (float)zero/n);
}
int main() {
    int n;
    scanf("%d", &n);
    int arr[n];
    for (int i = 0; i < n; i++) scanf("%d", &arr[i]);
    plusMinus(arr, n);
    return 0;
}

2]  #include <stdio.h>
void miniMaxSum(int arr[5]) {
    long total = 0;
    int min = arr[0], max = arr[0];
    for (int i = 0; i < 5; i++) {
        total += arr[i];
        if (arr[i] < min) min = arr[i];
        if (arr[i] > max) max = arr[i];
    }
    printf("%ld %ld", total - max, total - min);
}
int main() {
    int arr[5];
    for (int i = 0; i < 5; i++) {
        scanf("%d", &arr[i]);
    }
    miniMaxSum(arr);
    return 0;
}

3] #include <stdio.h>
#include <string.h>
int main() {
    char time[10];
    scanf("%s", time);
    int hour = (time[0] - '0') * 10 + (time[1] - '0');
    char period = time[8];
    if (period == 'P' && hour != 12) {
        hour += 12;
    } else if (period == 'A' && hour == 12) {
        hour = 0;
    }
    printf("%02d:%c%c:%c%c", hour, time[3], time[4], time[6], time[7]);
    return 0;
}
4 ] #include <stdio.h>
#include <string.h>
int main() {
    int n;
    scanf("%d", &n);
    char strings[n][100];
    for(int i=0; i<n; i++) {
        scanf("%s", strings[i]);
    }
    int q;
    scanf("%d", &q);
    char queries[q][100];
    for(int i=0; i<q; i++) {
        scanf("%s", queries[i]);
    }
    for(int i=0; i<q; i++) {
        int count = 0;
        for(int j=0; j<n; j++) {
            if(strcmp(queries[i], strings[j]) == 0) {
                count++;
            }
        }
        printf("%d\n", count);
    }

    return 0;
}
5] #include <stdio.h>
#include <stdlib.h>
int main() {
    int n;
    scanf("%d", &n);
    int matrix[n][n];
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            scanf("%d", &matrix[i][j]);
        }
    }
    
    int sum1 = 0, sum2 = 0;
    // Calculate diagonal sums
    for(int i = 0; i < n; i++) {
        sum1 += matrix[i][i]; 
        sum2 += matrix[i][n-1-i];     
    }
    printf("%d", abs(sum1 - sum2));
    return 0;
}
6] #include <stdio.h>

int lonelyinteger(int a_count, int* a) {
    int result = 0;
    for (int i = 0; i < a_count; i++) {
        result ^= a[i];
    }
    return result;
}
int main() {
    int n;
    scanf("%d", &n);
    
    int arr[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    printf("%d", lonelyinteger(n, arr));
    return 0;
}
7] #include <stdio.h>
int lonelyinteger(int a_count, int* a) {
    int result = 0;
    for (int i = 0; i < a_count; i++) {
        result ^= a[i];
    }
    return result;
}
int main() {
    int n;
    scanf("%d", &n);
    int arr[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    printf("%d", lonelyinteger(n, arr));
    return 0;
}
8] #include <stdio.h>
#include <stdlib.h>
int* countingSort(int arr_count, int* arr, int* result_count)
    static int freq[100] = {0};
    for (int i = 0; i < arr_count; i++) {
        freq[arr[i]]++;
    }
    *result_count = 100;
    return freq;
}
int main() {
    int n;
    scanf("%d", &n);
    int arr[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    int result_count;
    int* freq = countingSort(n, arr, &result_count);
    for (int i = 0; i < 100; i++) {
        printf("%d ", freq[i]);
    }
    return 0;
}
9] #include <stdio.h>
#include <stdint.h>
uint32_t flippingBits(uint32_t n) {
}
int main() {
    int q;
    scanf("%d", &q);
    while (q--) {
        uint32_t n;
        scanf("%u", &n);
        printf("%u\n", flippingBits(n));
    }
    return 0;
}
10] #include <stdio.h>
#include <ctype.h>
int main() {
    char s[1000];
    int letters[26] = {0};
    int i, count = 0;
    fgets(s, sizeof(s), stdin);
    for (i = 0; s[i] != '\0'; i++) {
        char c = tolower(s[i]);
        if (c >= 'a' && c <= 'z') {
            if (letters[c - 'a'] == 0) {
                letters[c - 'a'] = 1;
                count++;
            }
        }
    printf("%s", (count == 26) ? "pangram" : "not pangram");
    return 0;
}
11] #include <stdio.h>
#include <stdlib.h>
int asc(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}
int desc(const void *a, const void *b) {
    return (*(int*)b - *(int*)a);
}
char* twoArrays(int k, int A_count, int* A, int B_count, int* B) {
    // Sort A in ascending order and B in descending order
    qsort(A, A_count, sizeof(int), asc);
    qsort(B, B_count, sizeof(int), desc);
    for (int i = 0; i < A_count; i++) {
        if (A[i] + B[i] < k) {
            return "NO";
        }
    }
    return "YES";
}

int main() {
    int q;
    scanf("%d", &q);
    while (q--) {
        int n, k;
        scanf("%d %d", &n, &k);
        int A[n], B[n];
        for (int i = 0; i < n; i++) scanf("%d", &A[i]);
        for (int i = 0; i < n; i++) scanf("%d", &B[i]);
        
        printf("%s\n", twoArrays(k, n, A, n, B));
    }
    return 0;
}
12] #include <stdio.h>
int birthday(int s_count, int* s, int d, int m) {
    int count = 0;
    for (int i = 0; i <= s_count - m; i++) {
        int sum = 0;
        for (int j = 0; j < m; j++) {
            sum += s[i + j];
        }
        if (sum == d) {
            count++;
        }
    }
    return count;
}
int main() {
    int n;
    scanf("%d", &n);
    int s[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &s[i]);
    }
    int d, m;
    scanf("%d %d", &d, &m);
    
    printf("%d", birthday(n, s, d, m));
    return 0;
}
